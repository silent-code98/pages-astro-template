---
// components
import { Image } from "astro:assets";
import SocialLink from "./SocialLink.astro";
import Icon from "astro-icon";
import Link from "../components/Link.astro";

// data
import { socialLinks } from "../data/social-links";
import { primaryLinks } from "../data/nav-links";
---

<nav class="w-full bg-primary sticky top-0">
  <!-- nav container -->
  <div
    class="container max-w-[1300px] flex items-center justify-between py-4 md:py-5 px-3 md:px-5 relative"
  >
    <!-- logo / left col wrapper -->
    <div class="flex items-center justify-between gap-4 flex-1">
      <!-- logo svg -->
      <a href="/" title="Pages Logo">
        <Image
          src="/images/logo.svg"
          alt="Pages"
          width={120}
          height={36}
          class="min-w-[120px]"
        />
      </a>

      <!-- social links -->
      <div class="md:flex gap-3 items-center hidden">
        {
          socialLinks.map((l) => (
            <SocialLink iconName={l.name} link={l.link} label={l.label} />
          ))
        }
      </div>
    </div>

    <!-- right column wrapper -->
    <div
      class="flex items-center justify-end gap-4 flex-col md:flex-row flex-[3]"
    >
      <!-- navigation links -->
      <ul
        data-open="false"
        class="NAV_MENU flex text-white gap-0 md:gap-3 absolute md:static bg-primary flex-col md:flex-row top-0 right-0 border w-full md:w-auto md:border-0 shadow-lg md:shadow-none data-[open='true']:translate-y-[72px] data-[open='false']:-translate-y-full md:data-[open='false']:-translate-y-0 transition duration-300 z-10"
      >
        {
          primaryLinks.map((l) => (
            <li class="relative group flex gap-1 border-b md:border-0 px-5 py-3 md:p-0">
              <a
                class="hover:text-secondary transition duration-200"
                href={l.href}
              >
                {l.text}
              </a>
              {l.subPages?.length && (
                <Icon name="mdi:chevron-down" class="w-5" />
              )}
              {l.subPages?.length && (
                <ul class="z-50 flex flex-col w-max py-5 px-7 rounded-md bg-white text-primary font-medium gap-2 absolute top-[1.8rem] invisible -translate-y-3 left-0 group-hover:visible transition duration-200 group-hover:translate-y-0 shadow-lg">
                  <div class="w-3 h-3 bg-white transform rotate-45 absolute top-5 md:-top-1 lef-6 md:left-0 translate-x-0 transition duration-500 group-hover:left-[20px] group-hover:-translate-x-1/4" />
                  {l.subPages.map((page) => (
                    <li>
                      <a
                        href={page.href}
                        class="hover:text-secondary transition duration-200"
                      >
                        {page.text}
                      </a>
                    </li>
                  ))}
                </ul>
              )}
            </li>
          ))
        }
      </ul>
      <!-- cart -->
      <button
        type="button"
        class="flex items-center justify-center relative text-white self-end md:self-center mr-4 md:mr-0"
        aria-label="Toggle mobile navigation menu"
        title="Nav open button"
      >
        <span
          class="text-primary font-bold absolute -top-2 -right-1 text-[0.625rem] bg-secondary rounded-full p-1"
          >02</span
        >
        <Icon name="mdi:cart-outline" class="w-8 h-8" />
      </button>

      <!-- call to action -->
      <Link
        link="/"
        btnType="primary"
        size="sm"
        classes="hover:border-secondary hidden md:inline-block"
      >
        Order Today
      </Link>
    </div>

    <!-- hamburger menu icon -->
    <button
      type="button"
      class="NAV_TOGGLE_BTN flex md:hidden border border-secondary rounded-sm p-1"
    >
      <Icon name="line-md:menu" class="w-8 text-white" />
    </button>
  </div>
</nav>

<script>
  const navToggle = document.querySelector(".NAV_TOGGLE_BTN");
  const navMenu = document.querySelector(".NAV_MENU");

  navToggle.addEventListener("click", () => {
    if (navMenu.getAttribute("data-open") === "false") {
      navMenu.setAttribute("data-open", "true");
    } else {
      navMenu.setAttribute("data-open", "false");
    }
  });
</script>
